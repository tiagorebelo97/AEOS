# Podman Compose Configuration for AEOS
# This is a Podman-compatible version of docker-compose.yml

version: '3.8'

services:
  aeos-database:
    image: docker.io/postgres:14-alpine
    container_name: aeos-database
    environment:
      POSTGRES_DB: aeos
      POSTGRES_USER: aeos
      POSTGRES_PASSWORD: ${AEOS_DB_PASSWORD:-aeos_password_change_me}
      PGDATA: /var/lib/postgresql/data/pgdata
    volumes:
      - aeos-db-data:/var/lib/postgresql/data
      - ./init-scripts:/docker-entrypoint-initdb.d:ro
    ports:
      - "5432:5432"
    networks:
      - aeos-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U aeos || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    restart: always

  aeos-lookup:
    build:
      context: .
      dockerfile: Dockerfile.lookup
    container_name: aeos-lookup
    environment:
      AEOS_LOOKUP_PORT: 2505
      AEOS_DB_HOST: aeos-database
      AEOS_DB_PORT: 5432
      AEOS_DB_NAME: aeos
      AEOS_DB_USER: aeos
      AEOS_DB_PASSWORD: ${AEOS_DB_PASSWORD:-aeos_password_change_me}
    ports:
      - "2505:2505"
    networks:
      - aeos-network
    depends_on:
      - aeos-database
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "nc -z localhost 2505 || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  aeos-server:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: aeos-server
    environment:
      AEOS_DB_HOST: aeos-database
      AEOS_DB_PORT: 5432
      AEOS_DB_NAME: aeos
      AEOS_DB_USER: aeos
      AEOS_DB_PASSWORD: ${AEOS_DB_PASSWORD:-aeos_password_change_me}
      AEOS_LOOKUP_HOST: aeos-lookup
      AEOS_LOOKUP_PORT: 2505
      AEOS_SERVER_PORT: 2506
      AEOS_WEB_PORT: 8080
      AEOS_HTTPS_PORT: 8443
      TZ: ${TZ:-UTC}
    ports:
      - "8080:8080"
      - "8443:8443"
      - "2506:2506"
    volumes:
      - aeos-data:/var/lib/aeos
      - aeos-logs:/opt/aeos/logs
      - ./config:/opt/aeos/config:ro
    networks:
      - aeos-network
    depends_on:
      - aeos-database
      - aeos-lookup
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "/usr/local/bin/healthcheck.sh || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 120s

volumes:
  aeos-db-data:
    driver: local
  aeos-data:
    driver: local
  aeos-logs:
    driver: local

networks:
  aeos-network:
    driver: bridge
