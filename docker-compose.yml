version: '3.8'

services:
  aeos-database:
    image: postgres:14-alpine
    container_name: aeos-database
    environment:
      POSTGRES_DB: aeos
      POSTGRES_USER: aeos
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_INITDB_ARGS: "--encoding=UTF8"
    ports:
      - "5432:5432"
    volumes:
      - aeos-db-data:/var/lib/postgresql/data
    networks:
      - aeos-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U aeos -d aeos"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    restart: unless-stopped

  aeos-lookup:
    build:
      context: .
      dockerfile: Dockerfile.lookup
    container_name: aeos-lookup
    depends_on:
      aeos-database:
        condition: service_healthy
    environment:
      AEOS_DB_HOST: aeos-database
      AEOS_DB_PORT: 5432
      AEOS_DB_NAME: aeos
      AEOS_DB_USER: aeos
      AEOS_DB_PASSWORD: ${POSTGRES_PASSWORD}
      AEOS_LOOKUP_PORT: 2505
    ports:
      - "2505:2505"
    networks:
      - aeos-network
    restart: unless-stopped

  aeos-server:
    build:
      context: .
      dockerfile: Dockerfile.server
    container_name: aeos-server
    depends_on:
      aeos-database:
        condition: service_healthy
      aeos-lookup:
        condition: service_started
    environment:
      AEOS_DB_HOST: aeos-database
      AEOS_DB_PORT: 5432
      AEOS_DB_NAME: aeos
      AEOS_DB_USER: aeos
      AEOS_DB_PASSWORD: ${POSTGRES_PASSWORD}
      AEOS_LOOKUP_HOST: aeos-lookup
      AEOS_LOOKUP_PORT: 2505
      AEOS_SERVER_PORT: 2506
    ports:
      - "8080:8080"
      - "8443:8443"
      - "2506:2506"
    networks:
      - aeos-network
    restart: unless-stopped

networks:
  aeos-network:
    driver: bridge

volumes:
  aeos-db-data:
